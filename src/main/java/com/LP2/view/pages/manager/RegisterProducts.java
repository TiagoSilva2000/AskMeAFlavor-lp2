/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.LP2.view.pages.manager;

import com.LP2.controllers.items.DrinkController;
import com.LP2.controllers.items.FoodController;
import com.LP2.models.resources.Image;
import com.LP2.view.pages.warnings.Error;
import com.LP2.view.pages.warnings.Success;

import com.placeholder.PlaceHolder;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;

import javax.swing.BorderFactory;
import javax.swing.JFileChooser;
import javax.swing.SwingConstants;

/**
 *
 * @author evelyn.ferreira
 */
public class RegisterProducts extends javax.swing.JFrame {

    /**
     * Creates new form registerProducts
     */
    private static File selectedFile;
    public RegisterProducts() {
        initComponents();

        selectedFile = null;
        this.getContentPane().setBackground(Color.decode("14027569"));
        productDrinkRBTN.setSelected(true);
        presentRBTN.setSelected(true);

        PlaceHolder placeHolderName = new PlaceHolder(productNameTXT, Color.white, Color.white, "Qual o nome do produto?", false, "Verdana", 14);
        PlaceHolder placeHolderPrice = new PlaceHolder(productPriceTXT, Color.white, Color.white, "Preço", false, "Verdana", 14);
        PlaceHolder placeHolderProvider = new PlaceHolder(drinkProviderTXT, Color.white, Color.white, "Fornecedor", false, "Verdana", 14);
        PlaceHolder placeHolderDescription = new PlaceHolder(foodDescriptionTXT, Color.white, Color.white, "Descrição do item", false, "Verdana", 14);

        productNameTXT.setFont(new Font("Verdana", 0, 14));
        productNameTXT.setHorizontalAlignment(SwingConstants.CENTER);
        productNameTXT.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.white));
        productNameTXT.setBackground(Color.decode("14027569"));
        productNameTXT.setForeground(Color.white);
        productNameTXT.setCaretColor(Color.white);

        productPriceTXT.setFont(new Font("Verdana", 0, 14));
        productPriceTXT.setHorizontalAlignment(SwingConstants.CENTER);
        productPriceTXT.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.white));
        productPriceTXT.setBackground(Color.decode("14027569"));
        productPriceTXT.setForeground(Color.white);
        productPriceTXT.setCaretColor(Color.white);

        drinkProviderTXT.setFont(new Font("Verdana", 0, 14));
        drinkProviderTXT.setHorizontalAlignment(SwingConstants.CENTER);
        drinkProviderTXT.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.white));
        drinkProviderTXT.setBackground(Color.decode("14027569"));
        drinkProviderTXT.setForeground(Color.white);
        drinkProviderTXT.setCaretColor(Color.white);

        foodDescriptionTXT.setFont(new Font("Verdana", 0, 14));
        foodDescriptionTXT.setHorizontalAlignment(SwingConstants.CENTER);
        foodDescriptionTXT.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.white));
        foodDescriptionTXT.setBackground(Color.decode("14027569"));
        foodDescriptionTXT.setForeground(Color.white);
        foodDescriptionTXT.setCaretColor(Color.white);


        presentRBTN.setBackground(Color.decode("14027569"));
        notPresentRTBN.setBackground(Color.decode("14027569"));

        emptyDataLBL.setVisible(false);
        emptyData2LBL.setVisible(false);
        productDrinkRBTN.setBackground(Color.decode("14027569"));
        productFoodRBTN.setBackground(Color.decode("14027569"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        choicefoodGRP = new javax.swing.ButtonGroup();
        presenceBTNGroup = new javax.swing.ButtonGroup();
        fileChooser = new javax.swing.JFileChooser();
        productsBackBTN = new javax.swing.JButton();
        registerProductsPNL = new javax.swing.JPanel();
        Cadastrar = new javax.swing.JButton();
        productNameTXT = new javax.swing.JTextField();
        productFoodRBTN = new javax.swing.JRadioButton();
        productDrinkRBTN = new javax.swing.JRadioButton();
        drinkProviderTXT = new javax.swing.JTextField();
        productPriceTXT = new javax.swing.JTextField();
        emptyDataLBL = new javax.swing.JLabel();
        emptyData2LBL = new javax.swing.JLabel();
        foodDescriptionTXT = new javax.swing.JTextField();
        presentRBTN = new javax.swing.JRadioButton();
        notPresentRTBN = new javax.swing.JRadioButton();
        imageBTN = new javax.swing.JButton();
        logo = new javax.swing.JLabel();

        fileChooser.setDialogTitle("Adicionar imagem...");
        fileChooser.setFileHidingEnabled(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        productsBackBTN.setBackground(new java.awt.Color(38, 70, 27));
        productsBackBTN.setIcon(new javax.swing.ImageIcon((System.getProperty("user.dir") + "/assets/back16.png"))); // NOI18N
        productsBackBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productsBackBTNMouseClicked(evt);
            }
        });

        registerProductsPNL.setOpaque(false);

        Cadastrar.setBackground(new java.awt.Color(38, 70, 27));
        Cadastrar.setForeground(new java.awt.Color(255, 255, 255));
        Cadastrar.setText("Cadastrar");
        Cadastrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CadastrarMouseClicked(evt);
            }
        });

        productNameTXT.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        productNameTXT.setSelectionColor(new java.awt.Color(214, 11, 49));
        productNameTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                productNameTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                productNameTXTFocusLost(evt);
            }
        });
        productNameTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productNameTXTActionPerformed(evt);
            }
        });

        choicefoodGRP.add(productFoodRBTN);
        productFoodRBTN.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        productFoodRBTN.setForeground(new java.awt.Color(255, 255, 255));
        productFoodRBTN.setText("Comida");
        productFoodRBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productFoodRBTNMouseClicked(evt);
            }
        });

        choicefoodGRP.add(productDrinkRBTN);
        productDrinkRBTN.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        productDrinkRBTN.setForeground(new java.awt.Color(255, 255, 255));
        productDrinkRBTN.setText("Bebida");
        productDrinkRBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productDrinkRBTNMouseClicked(evt);
            }
        });

        drinkProviderTXT.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        drinkProviderTXT.setSelectionColor(new java.awt.Color(214, 11, 49));
        drinkProviderTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                drinkProviderTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                drinkProviderTXTFocusLost(evt);
            }
        });

        productPriceTXT.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        productPriceTXT.setSelectionColor(new java.awt.Color(214, 11, 49));
        productPriceTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                productPriceTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                productPriceTXTFocusLost(evt);
            }
        });

        emptyDataLBL.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        emptyDataLBL.setForeground(new java.awt.Color(255, 255, 255));
        emptyDataLBL.setText("* Todos os campos devem");

        emptyData2LBL.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        emptyData2LBL.setForeground(new java.awt.Color(255, 255, 255));
        emptyData2LBL.setText("ser preenchidos");

        foodDescriptionTXT.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        foodDescriptionTXT.setSelectionColor(new java.awt.Color(214, 11, 49));
        foodDescriptionTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                foodDescriptionTXTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                foodDescriptionTXTFocusLost(evt);
            }
        });

        presentRBTN.setBackground(productDrinkRBTN.getBackground());
        presenceBTNGroup.add(presentRBTN);
        presentRBTN.setForeground(new java.awt.Color(255, 255, 255));
        presentRBTN.setText("No Menu");
        presentRBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presentRBTNActionPerformed(evt);
            }
        });

        notPresentRTBN.setBackground(productDrinkRBTN.getBackground());
        presenceBTNGroup.add(notPresentRTBN);
        notPresentRTBN.setForeground(new java.awt.Color(255, 255, 255));
        notPresentRTBN.setText("Fora do Menu");

        imageBTN.setBackground(new java.awt.Color(38, 70, 27));
        imageBTN.setForeground(new java.awt.Color(255, 255, 255));
        imageBTN.setText("Adicionar Imagem...");
        imageBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registerProductsPNLLayout = new javax.swing.GroupLayout(registerProductsPNL);
        registerProductsPNL.setLayout(registerProductsPNLLayout);
        registerProductsPNLLayout.setHorizontalGroup(
            registerProductsPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerProductsPNLLayout.createSequentialGroup()
                .addGroup(registerProductsPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(registerProductsPNLLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(productFoodRBTN)
                        .addGap(86, 86, 86)
                        .addComponent(productDrinkRBTN))
                    .addComponent(drinkProviderTXT, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                    .addComponent(productNameTXT)
                    .addComponent(foodDescriptionTXT))
                .addGroup(registerProductsPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registerProductsPNLLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(registerProductsPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(productPriceTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(registerProductsPNLLayout.createSequentialGroup()
                                .addComponent(presentRBTN)
                                .addGap(32, 32, 32)
                                .addComponent(notPresentRTBN)))
                        .addGap(0, 50, Short.MAX_VALUE))
                    .addGroup(registerProductsPNLLayout.createSequentialGroup()
                        .addGroup(registerProductsPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(registerProductsPNLLayout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(imageBTN))
                            .addGroup(registerProductsPNLLayout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(Cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(registerProductsPNLLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(emptyDataLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emptyData2LBL)
                .addGap(26, 26, 26))
        );
        registerProductsPNLLayout.setVerticalGroup(
            registerProductsPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registerProductsPNLLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(registerProductsPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productNameTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productPriceTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(registerProductsPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productFoodRBTN)
                    .addComponent(productDrinkRBTN)
                    .addComponent(presentRBTN)
                    .addComponent(notPresentRTBN))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(registerProductsPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(drinkProviderTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imageBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(registerProductsPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(foodDescriptionTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(registerProductsPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emptyData2LBL, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emptyDataLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77))
        );

        logo.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        logo.setForeground(new java.awt.Color(255, 255, 255));
        logo.setIcon(new javax.swing.ImageIcon((System.getProperty("user.dir") + "/assets/logo.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(productsBackBTN)
                        .addContainerGap(575, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(registerProductsPNL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(178, 178, 178))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(productsBackBTN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(registerProductsPNL, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void productsBackBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productsBackBTNMouseClicked
        this.dispose();
        ManagerAccount managerScreen = new ManagerAccount();
        managerScreen.setVisible(true);
    }//GEN-LAST:event_productsBackBTNMouseClicked

    private void productDrinkRBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productDrinkRBTNMouseClicked
        drinkProviderTXT.setVisible(true);
        foodDescriptionTXT.setVisible(false);
    }//GEN-LAST:event_productDrinkRBTNMouseClicked

    private void CadastrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CadastrarMouseClicked
        String provider = drinkProviderTXT.getText().trim();
        String description = foodDescriptionTXT.getText().trim();
        String name = productNameTXT.getText().trim();
        String price = productPriceTXT.getText().trim();
        int success = -1;

        System.out.println(provider + "-" + description + "-" + name + "-" + price + "-");

        if((provider.isEmpty() &&
           description.isEmpty()) ||
           name.isEmpty() ||
           price.isEmpty()){

            emptyDataLBL.setVisible(true);
            emptyData2LBL.setVisible(true);
        } else {
            Image img = null;
            if (selectedFile!= null)
                img = new Image(selectedFile);

            if (productDrinkRBTN.isSelected()) {
                success = DrinkController.create(name, Double.parseDouble(price),
                                                provider, presentRBTN.isSelected(),
                                                img);;
            } else {
                success = FoodController.create(name, Double.parseDouble(price),
                                                description, presentRBTN.isSelected(),
                                                img);
            }
        }
        if (success == 1) {
            Success successDialog = new Success(this , true);
            successDialog.setVisible(true);
        } else {
            Error errorDialog = new Error(this , true);
            errorDialog.setVisible(true);
        }
    }//GEN-LAST:event_CadastrarMouseClicked

    private void productNameTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productNameTXTFocusGained
        productNameTXT.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.decode("6554655")));
    }//GEN-LAST:event_productNameTXTFocusGained

    private void productNameTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productNameTXTFocusLost
        productNameTXT.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.white));
    }//GEN-LAST:event_productNameTXTFocusLost

    private void productPriceTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productPriceTXTFocusGained
        productNameTXT.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.decode("6554655")));
    }//GEN-LAST:event_productPriceTXTFocusGained

    private void productPriceTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productPriceTXTFocusLost
        productNameTXT.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.white));
    }//GEN-LAST:event_productPriceTXTFocusLost

    private void drinkProviderTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_drinkProviderTXTFocusGained
        productNameTXT.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.decode("6554655")));
    }//GEN-LAST:event_drinkProviderTXTFocusGained

    private void drinkProviderTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_drinkProviderTXTFocusLost
        productNameTXT.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.white));
    }//GEN-LAST:event_drinkProviderTXTFocusLost

    private void foodDescriptionTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_foodDescriptionTXTFocusGained
        productNameTXT.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.decode("6554655")));
    }//GEN-LAST:event_foodDescriptionTXTFocusGained

    private void foodDescriptionTXTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_foodDescriptionTXTFocusLost
        productNameTXT.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.white));
    }//GEN-LAST:event_foodDescriptionTXTFocusLost

    private void productFoodRBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productFoodRBTNMouseClicked
        drinkProviderTXT.setVisible(false);
        foodDescriptionTXT.setVisible(true);
    }//GEN-LAST:event_productFoodRBTNMouseClicked

    private void presentRBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presentRBTNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_presentRBTNActionPerformed

    private void imageBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageBTNActionPerformed
        try {
            int returnVal = fileChooser.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                selectedFile = fileChooser.getSelectedFile();
                System.out.println(selectedFile.getAbsolutePath());
            } else {
                System.out.println("File access cancelled by user.");
            }
        } catch (final Exception e) {
            e.printStackTrace();
            System.out.println("Problem accessing file: " + selectedFile.getAbsolutePath());
        }
    }//GEN-LAST:event_imageBTNActionPerformed

    private void productNameTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productNameTXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productNameTXTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new RegisterProducts().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cadastrar;
    private javax.swing.ButtonGroup choicefoodGRP;
    private javax.swing.JTextField drinkProviderTXT;
    private javax.swing.JLabel emptyData2LBL;
    private javax.swing.JLabel emptyDataLBL;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JTextField foodDescriptionTXT;
    private javax.swing.JButton imageBTN;
    private javax.swing.JLabel logo;
    private javax.swing.JRadioButton notPresentRTBN;
    private javax.swing.ButtonGroup presenceBTNGroup;
    private javax.swing.JRadioButton presentRBTN;
    private javax.swing.JRadioButton productDrinkRBTN;
    private javax.swing.JRadioButton productFoodRBTN;
    private javax.swing.JTextField productNameTXT;
    private javax.swing.JTextField productPriceTXT;
    private javax.swing.JButton productsBackBTN;
    private javax.swing.JPanel registerProductsPNL;
    // End of variables declaration//GEN-END:variables
}
